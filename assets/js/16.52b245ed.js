(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{381:function(t,a,s){t.exports=s.p+"assets/img/image-20210225005912570.3d518477.png"},430:function(t,a,s){"use strict";s.r(a);var n=s(11),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"risc-v-assembly"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#risc-v-assembly"}},[t._v("#")]),t._v(" RISC-V assembly")]),t._v(" "),n("p",[t._v("这是一个简单的"),n("code",[t._v("RISC-V")]),t._v("汇编热身关卡。")]),t._v(" "),n("p",[t._v("我们需要查看"),n("code",[t._v("user/call.asm")]),t._v("来回答一些问题，其主要内容如下：")]),t._v(" "),n("div",{staticClass:"language-assembly extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('int g(int x) {\n   0:\t1141                \taddi\tsp,sp,-16\n   2:\te422                \tsd\ts0,8(sp)\n   4:\t0800                \taddi\ts0,sp,16\n  return x+3;\n}\n   6:\t250d                \taddiw\ta0,a0,3\n   8:\t6422                \tld\ts0,8(sp)\n   a:\t0141                \taddi\tsp,sp,16\n   c:\t8082                \tret\n\n000000000000000e <f>:\n\nint f(int x) {\n   e:\t1141                \taddi\tsp,sp,-16\n  10:\te422                \tsd\ts0,8(sp)\n  12:\t0800                \taddi\ts0,sp,16\n  return g(x);\n}\n  14:\t250d                \taddiw\ta0,a0,3\n  16:\t6422                \tld\ts0,8(sp)\n  18:\t0141                \taddi\tsp,sp,16\n  1a:\t8082                \tret\n\n000000000000001c <main>:\n\nvoid main(void) {\n  1c:\t1141                \taddi\tsp,sp,-16\n  1e:\te406                \tsd\tra,8(sp)\n  20:\te022                \tsd\ts0,0(sp)\n  22:\t0800                \taddi\ts0,sp,16\n  printf("%d %d\\n", f(8)+1, 13);\n  24:\t4635                \tli\ta2,13\n  26:\t45b1                \tli\ta1,12\n  28:\t00000517          \tauipc\ta0,0x0\n  2c:\t7b850513          \taddi\ta0,a0,1976 # 7e0 <malloc+0xea>\n  30:\t00000097          \tauipc\tra,0x0\n  34:\t608080e7          \tjalr\t1544(ra) # 638 <printf>\n  exit(0);\n  38:\t4501                \tli\ta0,0\n  3a:\t00000097          \tauipc\tra,0x0\n  3e:\t276080e7          \tjalr\t630(ra) # 2b0 <exit>\n')])])]),n("blockquote",[n("p",[t._v("Which registers contain arguments to functions? For example, which register holds 13 in main's call to "),n("code",[t._v("printf")]),t._v("?")])]),t._v(" "),n("p",[t._v("根据"),n("code",[t._v("RISC-V")]),t._v("的 calling convention，"),n("code",[t._v("a0-a7")]),t._v(","),n("code",[t._v("fa0-fa7")]),t._v("包含了函数的参数。调用"),n("code",[t._v("printf")]),t._v("时，"),n("code",[t._v("a0")]),t._v("为格式化字符串，"),n("code",[t._v("a1")]),t._v("是 12，"),n("code",[t._v("a2")]),t._v("是 13。")]),t._v(" "),n("blockquote",[n("p",[t._v("Where is the call to function "),n("code",[t._v("f")]),t._v(" in the assembly code for main? Where is the call to "),n("code",[t._v("g")]),t._v("? (Hint: the compiler may inline functions.)")])]),t._v(" "),n("p",[t._v("由于"),n("code",[t._v("f")]),t._v("和"),n("code",[t._v("g")]),t._v("函数都是简单的常数计算，传递的参数也是常数 8，所以函数调用被编译器优化掉了，在"),n("code",[t._v("0x26")]),t._v("位置，直接将函数调用结果立即数 12 载入寄存器"),n("code",[t._v("a1")]),t._v("。")]),t._v(" "),n("blockquote",[n("p",[t._v("At what address is the function "),n("code",[t._v("printf")]),t._v(" located?")])]),t._v(" "),n("p",[t._v("从代码中看，很显然，在"),n("code",[t._v("0x638")]),t._v("得位置。")]),t._v(" "),n("blockquote",[n("p",[t._v("What value is in the register "),n("code",[t._v("ra")]),t._v(" just after the "),n("code",[t._v("jalr")]),t._v(" to "),n("code",[t._v("printf")]),t._v(" in "),n("code",[t._v("main")]),t._v("?")])]),t._v(" "),n("p",[n("code",[t._v("jalr")]),t._v("指令是链接并跳转，将返回地址保存到"),n("code",[t._v("ra")]),t._v("寄存器，所以应为"),n("code",[t._v("0x38")]),t._v("。")]),t._v(" "),n("blockquote",[n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x00646c72")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"H%x Wo%s"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("57616")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),n("p",[t._v("运行以上代码，输出"),n("code",[t._v("HE110 World")]),t._v("。数字 57616 的 16 进制表示为 0xE110；"),n("code",[t._v("RISC-V")]),t._v("采用小端法表示，16 进制的 72、6c、64、00 表示字符串“rld\\0”，如果改为大端法，则应反过来，变为"),n("code",[t._v("i=0x726c6400")]),t._v("。")]),t._v(" "),n("blockquote",[n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x=%d y=%d"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),n("p",[t._v("该"),n("code",[t._v("printf")]),t._v("调用少了一个参数，根据 calling convention，对"),n("code",[t._v("y=%d")]),t._v("会取"),n("code",[t._v("a2")]),t._v("的值进行输出。")]),t._v(" "),n("h1",{attrs:{id:"backtrace"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#backtrace"}},[t._v("#")]),t._v(" Backtrace")]),t._v(" "),n("p",[t._v("该步骤需要实现一个"),n("code",[t._v("backtrace")]),t._v("函数，打印出调用轨迹，即每次调用的返回地址。")]),t._v(" "),n("p",[t._v("xv6 运行时的 stack 结构如下图：")]),t._v(" "),n("p",[n("img",{attrs:{src:s(381),alt:"image-20210225005912570"}})]),t._v(" "),n("p",[n("code",[t._v("s0/fp")]),t._v("中存储着当前的 frame pointer，"),n("code",[t._v("fp-8")]),t._v("指向返回地址，"),n("code",[t._v("fp-16")]),t._v("指向上一个"),n("code",[t._v("fp")]),t._v("地址。")]),t._v(" "),n("p",[t._v("所以我们只需要不断打印当前"),n("code",[t._v("fp")]),t._v("的返回地址并向前追溯，直到 stack 顶部。")]),t._v(" "),n("p",[t._v("首先在"),n("code",[t._v("kernel/riscv.h")]),t._v("添加内联汇编函数以获取"),n("code",[t._v("fp")]),t._v("值：")]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inline")]),t._v(" uint64\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("r_fp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  uint64 x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("asm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mv %0, s0"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"=r"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("然后在"),n("code",[t._v("kernel/printf.c")]),t._v("实现"),n("code",[t._v("backtrace")]),t._v("：")]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("backtrace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  uint64 fp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" top"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  fp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("r_fp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  top "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("PGROUNDUP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" top"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%p\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uint64"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fp"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    fp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uint64"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fp"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("之后在"),n("code",[t._v("sys_sleep")]),t._v("和"),n("code",[t._v("panic")]),t._v("中加入对"),n("code",[t._v("backtrace")]),t._v("的调用即可。")]),t._v(" "),n("h1",{attrs:{id:"alarm"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#alarm"}},[t._v("#")]),t._v(" Alarm")]),t._v(" "),n("p",[t._v("本关需要实现一个"),n("code",[t._v("sigalarm(interval, handler)")]),t._v("系统调用，cpu 每消耗 interval 个 ticks 后，调用一次 handler 函数。")]),t._v(" "),n("p",[t._v("首先要在"),n("code",[t._v("user/user.h")]),t._v("添加对新系统调用的用户接口：")]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sigalarm")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" ticks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("handler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sigreturn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("code",[t._v("sigreturn")]),t._v("是一个被设计用来帮助我们实现"),n("code",[t._v("sigalarm")]),t._v("的函数，每个"),n("code",[t._v("handler")]),t._v("执行结束后，都调用"),n("code",[t._v("sigreturn")]),t._v("。")]),t._v(" "),n("p",[t._v("首先要在"),n("code",[t._v("proc")]),t._v("中添加新的字段，记录"),n("code",[t._v("interval")]),t._v("，"),n("code",[t._v("handler")]),t._v("以及所需的辅助变量，在"),n("code",[t._v("allocpoc")]),t._v("中对它们进行初始化，在系统调用执行时，保存相应的值到"),n("code",[t._v("proc")]),t._v("中。")]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[t._v("uint64\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sys_sigalarm")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("proc")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("myproc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("argint")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("alarm_interval"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("argaddr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("alarm_hanlder"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("之后，我们需要在"),n("code",[t._v("usertrap")]),t._v("识别到 timer interrupt 时，进行处理，hints 告诉我们，是"),n("code",[t._v("which_dev == 2")]),t._v("。")]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// give up the CPU if this is a timer interrupt.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("which_dev "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("passed"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("passed "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("alarm_interval"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("passed "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("trapframe"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("epc "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("alarm_hanlder"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yield")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("此时只需让"),n("code",[t._v("sigreturn")]),t._v("直接返回 0，这样简单地添加代码，可以让"),n("code",[t._v("test0")]),t._v("打印出 alarm，但是随后，程序便逻辑崩溃，无法通过测试。这是因为当 kernle 处理完 time interru，回到用户模式，pc 指向 handler 的位置，之后开始执行 handler 函数，在 handler 函数尾部，调用"),n("code",[t._v("sigreturn")]),t._v("陷入 kernel，并无操作，再次返回用户态，执行 handler 尾部的"),n("code",[t._v("ret")]),t._v("。此时用于"),n("code",[t._v("ret")]),t._v("指令的返回地址寄存器"),n("code",[t._v("ra")]),t._v("所存储的值，是在 time interrupt 之时，test 函数执行中产生的"),n("code",[t._v("ra")]),t._v("的值，并非是 time interrupt 发生时，正在执行的代码地址，所以程序不能返回正确位置，并且 handler 执行过程中，修改了的部分寄存器也需要恢复。")]),t._v(" "),n("p",[t._v("于是，我们需要在 handler 执行前保存"),n("code",[t._v("tramframe")]),t._v("，在执行后的"),n("code",[t._v("sigreturn")]),t._v("中恢复"),n("code",[t._v("tramframe")]),t._v("，让代码返回到正确的位置执行，并使寄存器的数值复原。同时，根据 hints，为了防止 handler 执行过程中被重复调用，添加"),n("code",[t._v("permission")]),t._v("字段来进行控制，此外，"),n("code",[t._v("interval==0")]),t._v("时，意味着取消 alarm。")]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[t._v("uint64\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sys_sigreturn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("proc")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("myproc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("permission "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("trapframe "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("alarm_frame"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ra:%p\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("trapframe"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("ra"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在"),n("code",[t._v("usertrap")]),t._v("中：")]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("which_dev "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("passed"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("permission "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n      p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("alarm_interval "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n      p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("passed "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("alarm_interval"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("passed "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("permission "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("alarm_frame "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("trapframe"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("trapframe"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("epc "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("alarm_hanlder"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yield")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("到此，便完成了 lab4 traps。")]),t._v(" "),n("p",[t._v("此外，还有一点，笔者曾尝试只保存"),n("code",[t._v("tramframe")]),t._v("中的"),n("code",[t._v("caller save")]),t._v("寄存器，但是无法通过测试。最终查看"),n("code",[t._v("asm")]),t._v("文件发现："),n("code",[t._v("callee save")]),t._v("寄存器是在被调用函数尾部的 ret 指令前进行恢复的，但是在"),n("code",[t._v("sigreturn")]),t._v("中通过恢复"),n("code",[t._v("epc")]),t._v("的方式，将"),n("code",[t._v("pc")]),t._v("直接指向了被 time interrupt 打断执行的代码位置，所以"),n("code",[t._v("callee save")]),t._v("寄存器在被修改后并未被复原，我们必须保存"),n("code",[t._v("trapframe")]),t._v("中的所有寄存器。")]),t._v(" "),n("p",[t._v("最终代码见"),n("a",{attrs:{href:"https://github.com/Jason210314/xv6-labs-2020/tree/traps",target:"_blank",rel:"noopener noreferrer"}},[t._v("github 仓库"),n("OutboundLink")],1),t._v("。")])])}),[],!1,null,null,null);a.default=e.exports}}]);