(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{435:function(t,s,a){"use strict";a.r(s);var n=a(11),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("最近因为毕设的原因，需要看 Cpp 项目，首先项目构建就涉及到了 CMake，所以跟着 CMake 官网的 Tutorial 学习了一下，该文章算是官网教程的搬运。\n"),a("a",{attrs:{href:"https://cmake.org/cmake/help/latest/guide/tutorial/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tutorial 点这里"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://github.com/Kitware/CMake/tree/master/Help/guide/tutorial",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub 代码点这里"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h1",{attrs:{id:"构建简单项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建简单项目"}},[t._v("#")]),t._v(" 构建简单项目")]),t._v(" "),a("p",[t._v("最基本的 CMake 项目是由源代码文件构建可执行文件。对于简单的项目，只需要一个三行的 CMakeLists.txt 文件。这将是我们 tutorial 的起点。")]),t._v(" "),a("h2",{attrs:{id:"开始项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开始项目"}},[t._v("#")]),t._v(" 开始项目")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("cmake_minimum_required")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("VERSION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# set the project name")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("project")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# add the executable")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_executable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial tutorial.cxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("源代码"),a("code",[t._v("tutorial.cxx")]),t._v("如下")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A simple program that computes the square root of a number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<cmath>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<cstdlib>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<string>")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("argc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Usage: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" number"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// convert input to double")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" inputValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("atof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// calculate square root")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" outputValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sqrt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inputValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The square root of "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" inputValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" is "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" outputValue\n            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"添加版本号并配置头文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加版本号并配置头文件"}},[t._v("#")]),t._v(" 添加版本号并配置头文件")]),t._v(" "),a("p",[t._v("添加版本号")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#set the project name and version")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("project")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("VERSION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("然后，配置一个头文件，将版本号传递给源代码")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("configure_file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TutorialConfig.h.in TutorialConfig.h"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("由于配置的文件将被写入二叉树，所以我们必须将该目录添加到搜索 include 文件的路径列表中（该声明放在"),a("code",[t._v("add_executable")]),t._v("之后）:")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_include_directories")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PUBLIC")]),t._v("\n                           "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("PROJECT_BINARY_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),t._v("\n                           "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("新建"),a("code",[t._v("TutorialConfig.h.in")])]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[t._v("// the configured options and settings for Tutorial\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#define Tutorial_VERSION_MAJOR @Tutorial_VERSION_MAJOR@")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#define Tutorial_VERSION_MINOR @Tutorial_VERSION_MINOR@")]),t._v("\n")])])]),a("p",[t._v("当 CMake 配置这个头文件时，@Tutorial_VERSION_MAJOR@和@Tutorial_VERSION_MINOR@的值将被替换。")]),t._v(" "),a("p",[t._v("接着，修改源代码，include 头文件"),a("code",[t._v("TutorialConfig.h")]),t._v("。然后，更新源代码打印出可执行文件的名称和版本号：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("argc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// report version")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" Version "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" Tutorial_VERSION_MAJOR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"."')]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" Tutorial_VERSION_MINOR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Usage: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" number"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("指定使用 C++11 标准，使用"),a("code",[t._v("std::stod")])]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("cmake_minimum_required")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("VERSION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# set the project name and version")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("project")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("VERSION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# specify the C++ standard")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CXX_STANDARD")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CXX_STANDARD_REQUIRED")]),t._v(" True"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("CMAKE_CXX_STANDARD 生命必须放在 add_executable 之前")]),t._v(" "),a("h2",{attrs:{id:"构建并测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建并测试"}},[t._v("#")]),t._v(" 构建并测试")]),t._v(" "),a("p",[t._v("首先构建")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" step1_build\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" step1_build\ncmake "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\ncmake --build "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])]),a("p",[t._v("然后测试")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Tutorial "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4294967296")]),t._v("\nTutorial "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\nTutorial\n")])])]),a("h1",{attrs:{id:"添加一个库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加一个库"}},[t._v("#")]),t._v(" 添加一个库")]),t._v(" "),a("p",[t._v("我们将向项目中添加一个库。这个库将包含了自定义的平方根函数的实现。之后，在可执行文件中使用用这个库，替换编译器提供的标准平方根函数。")]),t._v(" "),a("p",[t._v("新建"),a("code",[t._v("MathFunctions")]),t._v("目录，在其下添加"),a("code",[t._v("CMakeLists.txt")]),t._v(",添加如下内容:")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_library")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MathFunctions mysqrt.cxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("code",[t._v("mysqrt.cxx")]),t._v("如下：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a hack square root calculation using simple operations")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mysqrt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do ten iterations")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" delta "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" delta "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Computing sqrt of "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" to be "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" result\n                  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("为了使用新库，我们将在顶层的"),a("code",[t._v("CMakeLists.txt")]),t._v("文件中添加一个"),a("code",[t._v("add subdirectory()")]),t._v("调用，以便构建库。我们将新库添加到可执行文件中，并将"),a("code",[t._v("MathFunctions")]),t._v("添加为 include 目录，以便可以找到"),a("code",[t._v("mqsqrt.h")]),t._v("头文件。顶层的"),a("code",[t._v("CMakeLists.txt")]),t._v("文件的最后几行现在看起来应该是这样的：")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# add the MathFunctions library")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_subdirectory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MathFunctions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# add the executable")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_executable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial tutorial.cxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_link_libraries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PUBLIC")]),t._v(" MathFunctions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# add the binary tree to the search path for include files")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# so that we will find TutorialConfig.h")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_include_directories")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PUBLIC")]),t._v("\n                          "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("PROJECT_BINARY_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),t._v("\n                          "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("PROJECT_SOURCE_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('/MathFunctions"')]),t._v("\n                          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("现在让我们把 MathFunctions 库变成可选的。虽然对于本教程来说，没有必要这样做，但对于大型项目来说，这是一种常见的情况。第一步是在顶层的 CMakeLists.txt 文件中添加一个选项（"),a("code",[t._v("option")]),t._v("放在"),a("code",[t._v("configure_file")]),t._v("前面）:")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("option")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("USE_MYMATH "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Use tutorial provided math implementation"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("ON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# configure a header file to pass some of the CMake settings")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# to the source code")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("configure_file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TutorialConfig.h.in TutorialConfig.h"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("这个选项会在 "),a("code",[t._v("cmake-gui")]),t._v(" 和 "),a("code",[t._v("ccmake")]),t._v(" 中显示，默认值为 ON，用户可以更改。这个设置将被保存在缓存中，这样用户就不需要在每次运行 CMake 的时候设置这个值。")]),t._v(" "),a("p",[t._v("下一个步是使构建和链接"),a("code",[t._v("MathFunctions")]),t._v("库成为条件判断的。要做到这一点，我们将顶层"),a("code",[t._v("CMakeLists.txt")]),t._v("文件的结尾改为如下所示:")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("USE_MYMATH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_subdirectory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MathFunctions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("APPEND EXTRA_LIBS MathFunctions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("APPEND EXTRA_INCLUDES "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("PROJECT_SOURCE_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('/MathFunctions"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endif")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# add the executable")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_executable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial tutorial.cxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_link_libraries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PUBLIC")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("EXTRA_LIBS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# add the binary tree to the search path for include files")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# so that we will find TutorialConfig.h")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_include_directories")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PUBLIC")]),t._v("\n                           "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("PROJECT_BINARY_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),t._v("\n                           "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("EXTRA_INCLUDES"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                           "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("请注意使用变量"),a("code",[t._v("EXTRA_LIBS")]),t._v("来收集任何可选的库，以便以后链接到可执行文件中。变量"),a("code",[t._v("EXTRA_INCLUDES")]),t._v("也同样用于处理可选的头文件。这是在处理许多可选组件时的传统方法，下一步讲介绍更为现代化方法。")]),t._v(" "),a("p",[t._v("相应的，需要简单修改源代码。首先，在"),a("code",[t._v("tutorial.cxx")]),t._v("中，如果我们需要的话，就加入"),a("code",[t._v("MathFunctions.h")]),t._v("头文件：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifdef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("USE_MYMATH")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MathFunctions.h"')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n")])])]),a("p",[t._v("然后，使用"),a("code",[t._v("USE_MYMATH")]),t._v("控制库函数的调用：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifdef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("USE_MYMATH")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" outputValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mysqrt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inputValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("else")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" outputValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sqrt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inputValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n")])])]),a("p",[t._v("由于源代码现在需要 "),a("code",[t._v("USE_MYMATH")]),t._v("， 我们可以在 "),a("code",[t._v("TutorialConfig.h.in")]),t._v("中加入下面这行:")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("cmakedefine")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("USE_MYMATH")])]),t._v("\n")])])]),a("p",[t._v("接下来，在构建时，可以使用"),a("code",[t._v("-D")]),t._v("添加使用选项，例如要关闭选项，使用：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("cmake "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(" -DUSE_MYMATH"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("OFF\n")])])]),a("h1",{attrs:{id:"添加库的使用条件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加库的使用条件"}},[t._v("#")]),t._v(" 添加库的使用条件")]),t._v(" "),a("p",[t._v("使用条件允许更好地控制库或可执行文件的链接和"),a("code",[t._v("include")]),t._v("行，同时也给予 CMake 内部 target 的转义属性更多的控制。利用使用条件的主要命令有:")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://cmake.org/cmake/help/latest/command/target_compile_definitions.html#command:target_compile_definitions",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("target_compile_definitions()")]),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://cmake.org/cmake/help/latest/command/target_compile_options.html#command:target_compile_options",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("target_compile_options()")]),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://cmake.org/cmake/help/latest/command/target_include_directories.html#command:target_include_directories",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("target_include_directories()")]),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://cmake.org/cmake/help/latest/command/target_link_libraries.html#command:target_link_libraries",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("target_link_libraries()")]),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("让我们从步骤 2 开始中重构我们的代码，使用现代 CMake 的使用条件方法。我们首先声明，任何人链接到"),a("code",[t._v("MathFunctions")]),t._v("都需要包含当前目录，而"),a("code",[t._v("MathFunctions")]),t._v("本身不需要。所以这可以成为一个"),a("code",[t._v("INTERFACE")]),t._v("的使用条件。")]),t._v(" "),a("p",[t._v("记住，"),a("code",[t._v("INTERFACE")]),t._v("是指使用者需要而提供者不需要的东西。在"),a("code",[t._v("MathFunctions/CMakeLists.txt")]),t._v("的末尾添加以下几行:")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_include_directories")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MathFunctions\n          "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("INTERFACE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CURRENT_SOURCE_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("现在我们已经指定了 "),a("code",[t._v("MathFunctions")]),t._v("的使用条件，我们可以安全地从顶层的 "),a("code",[t._v("CMakeLists.txt")]),t._v("中删除对 "),a("code",[t._v("EXTRA_INCLUDES")]),t._v(" 变量的使用。")]),t._v(" "),a("p",[t._v("此处")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("USE_MYMATH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# add the MathFunctions library")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_subdirectory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MathFunctions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("APPEND EXTRA_LIBS MathFunctions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endif")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("和此处")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_include_directories")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PUBLIC")]),t._v("\n                           "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("PROJECT_BINARY_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),t._v("\n                           "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("之后便可以重新构建项目了。")]),t._v(" "),a("h1",{attrs:{id:"安装和测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装和测试"}},[t._v("#")]),t._v(" 安装和测试")]),t._v(" "),a("p",[t._v("现在我们可以开始为我们的项目添加安装规则和测试支持。")]),t._v(" "),a("h2",{attrs:{id:"安装规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装规则"}},[t._v("#")]),t._v(" 安装规则")]),t._v(" "),a("p",[t._v("安装规则相当简单：对于"),a("code",[t._v("MathFunctions")]),t._v("，我们要安装库和头文件，对于应用程序，我们要安装可执行文件和配置的头文件。")]),t._v(" "),a("p",[t._v("所以在"),a("code",[t._v("MathFunctions/CMakeLists.txt")]),t._v("中添加：")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("install")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TARGETS MathFunctions DESTINATION lib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("install")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FILES MathFunctions.h DESTINATION include"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("在顶层的"),a("code",[t._v("CMakeLists.txt")]),t._v("中 添加：")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("install")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TARGETS Tutorial DESTINATION bin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("install")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FILES "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("PROJECT_BINARY_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('/TutorialConfig.h"')]),t._v("\n  DESTINATION include\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("这就是为"),a("code",[t._v("tutorial")]),t._v("创建一个基本的本地安装所需要的全部内容。")]),t._v(" "),a("p",[t._v("现在重新来配置项目并构建它。然后在命令行使用"),a("code",[t._v("cmake")]),t._v(" 命令的"),a("code",[t._v("install")]),t._v(" 选项来运行安装步骤 (在 3.15 中引入，旧版本的 CMake 必须使用 make install)。对于多配置工具，不要忘记使用--config 参数来指定配置。如果使用 IDE，只需构建"),a("code",[t._v("INSTALL")]),t._v(" target。这一步将安装相应的头文件、库和可执行文件。例如:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("cmake --install "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])]),a("p",[t._v("CMake 变量 "),a("code",[t._v("CMAKE_INSTALL_PREFIX")]),t._v(" 用于确定文件安装的根目录。如果使用 "),a("code",[t._v("cmake --install")]),t._v(" 命令，安装目录可以通过 "),a("code",[t._v("--prefix")]),t._v("参数重写。例如：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("cmake --install "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" --prefix "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/home/myuser/installdir"')]),t._v("\n")])])]),a("h2",{attrs:{id:"测试支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试支持"}},[t._v("#")]),t._v(" 测试支持")]),t._v(" "),a("p",[t._v("接下来，测试我们的应用程序。在顶层的"),a("code",[t._v("CMakeLists.txt")]),t._v("文件的末尾，我们可以启用测试，然后添加一些基本测试以验证应用程序是否正常运行。")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enable_testing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# does the application run")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("NAME")]),t._v(" Runs COMMAND Tutorial "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# does the usage message work?")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("NAME")]),t._v(" Usage COMMAND Tutorial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set_tests_properties")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Usage\n  "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PROPERTIES")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("PASS_REGULAR_EXPRESSION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Usage:.*number"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# define a function to simplify adding tests")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("do_test target arg result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("NAME")]),t._v(" Comp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" COMMAND "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set_tests_properties")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Comp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PROPERTIES")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("PASS_REGULAR_EXPRESSION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endfunction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("do_test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# do a bunch of result based tests")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("do_test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4 is 2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("do_test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"9 is 3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("do_test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5 is 2.236"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("do_test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"7 is 2.645"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("do_test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"25 is 5"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("do_test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial -"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-25 is [-nan|nan|0]"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("do_test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0001")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.0001 is 0.01"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("第一个测试只是简单地验证应用程序是否运行，没有 segfault 或其他崩溃，并且返回值为零。这是 CTest 测试的基本形式。")]),t._v(" "),a("p",[t._v("下一个测试利用"),a("code",[t._v("PASS_REGULAR_EXPRESSION")]),t._v("测试属性来验证测试的输出是否包含某些字符串。在这种情况下，验证当提供的参数数量不正确时，是否会打印出使用信息。")]),t._v(" "),a("p",[t._v("最后，我们有一个名为 do_test 的函数，它运行应用程序并验证给定输入的计算平方根是否正确。每调用一次"),a("code",[t._v("do_test")]),t._v("，就会在项目中添加一个测试，包括名称、输入和基于传递的参数的预期结果。")]),t._v(" "),a("p",[t._v("重新构建应用程序，然后 cd 到二进制目录，运行"),a("code",[t._v("ctest")]),t._v("可执行文件："),a("code",[t._v("ctest -N")]),t._v("（"),a("code",[t._v("--show-only[=format]")]),t._v("）和"),a("code",[t._v("ctest -VV")]),t._v("（"),a("code",[t._v("--extra-verbose")]),t._v("）。对于多配置生成器（如 Visual Studio），必须指定配置类型。例如，要在 Debug 模式下运行测试，从构建目录中使用"),a("code",[t._v("ctest -C Debug -VV")]),t._v("（不是 Debug 子目录！）。或者，从 IDE 中构建"),a("code",[t._v("RUN_TESTS")]),t._v("目标。")]),t._v(" "),a("h1",{attrs:{id:"添加系统自检"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加系统自检"}},[t._v("#")]),t._v(" 添加系统自检")]),t._v(" "),a("p",[t._v("让我们考虑在我们的项目中添加一些代码，这些代码取决于目标平台可能没有的功能。在这个例子中，我们将添加一些代码，这些代码取决于目标平台是否有 log 和 exp 函数。当然，几乎每个平台都有这些函数，但在本教程中，假设它们并不常见。")]),t._v(" "),a("p",[t._v("如果平台上有 log 和 exp，那么我们将使用它们来计算 mysqrt 函数中的平方根。我们首先使用顶层"),a("code",[t._v("CMakeLists.txt")]),t._v("中的"),a("code",[t._v("CheckSymbolExists")]),t._v("模块测试这些函数是否可用。在某些平台上，我们需要链接到"),a("code",[t._v("m")]),t._v("库。如果最初没有找到"),a("code",[t._v("log")]),t._v("和"),a("code",[t._v("exp")]),t._v("，则需要使用"),a("code",[t._v("m")]),t._v("库并再次尝试。")]),t._v(" "),a("p",[t._v("我们将使用"),a("code",[t._v("TutorialConfig.h.in")]),t._v("中的新定义，所以一定要在配置该文件之前设置它们。")]),t._v(" "),a("p",[t._v("如果系统上有"),a("code",[t._v("log")]),t._v("和"),a("code",[t._v("exp")]),t._v("，那么我们将在"),a("code",[t._v("mysqrt")]),t._v("函数中使用它们来计算平方根。在"),a("code",[t._v("MathFunctions/mysqrt.cxx")]),t._v("中的"),a("code",[t._v("mysqrt")]),t._v("函数中添加以下代码（在返回结果之前不要忘记"),a("code",[t._v("#endif")]),t._v("！）。")]),t._v(" "),a("p",[t._v("重新构建项目，会发现无论平台上是否有"),a("code",[t._v("log")]),t._v("和"),a("code",[t._v("exp")]),t._v("，都不会调用它们。因为我们忘记了在"),a("code",[t._v("mysqrt.cxx")]),t._v("中 include "),a("code",[t._v("TutorialConfig.h")]),t._v("。现在更新")]),t._v(" "),a("p",[t._v("我们还需要更新"),a("code",[t._v("MathFunctions / CMakeLists.txt")]),t._v("，以便"),a("code",[t._v("mysqrt.cxx")]),t._v("知道此文件的位置：")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_include_directories")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MathFunctions\n          "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("INTERFACE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CURRENT_SOURCE_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PRIVATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_BINARY_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"指定编译定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指定编译定义"}},[t._v("#")]),t._v(" 指定编译定义")]),t._v(" "),a("p",[t._v("除了在"),a("code",[t._v("TutorialConfig.h")]),t._v("中保存"),a("code",[t._v("HAVE_LOG")]),t._v("和"),a("code",[t._v("HAVE_EXP")]),t._v("值，我们还有更好的方法吗？让我们尝试使用"),a("code",[t._v("target_compile_definitions()")]),t._v("。")]),t._v(" "),a("p",[t._v("首先，从"),a("code",[t._v("TutorialConfig.h.in")]),t._v("中删除定义。我们不再需要在"),a("code",[t._v("mysqrt.cxx")]),t._v("中 include "),a("code",[t._v("TutorialConfig.h")]),t._v("或"),a("code",[t._v("MathFunctions/CMakeLists.txt")]),t._v("中的其他 include 内容。")]),t._v(" "),a("p",[t._v("接下来，我们可以将"),a("code",[t._v("HAVE_LOG")]),t._v("和"),a("code",[t._v("HAVE_EXP")]),t._v("的检查移至"),a("code",[t._v("MathFunctions/CMakeLists.txt")]),t._v("，然后将这些值指定为"),a("code",[t._v("PRIVATE")]),t._v("编译定义。")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CheckSymbolExists"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("check_symbol_exists")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("log "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"math.h"')]),t._v(" HAVE_LOG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("check_symbol_exists")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exp "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"math.h"')]),t._v(" HAVE_EXP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HAVE_LOG "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" HAVE_EXP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HAVE_LOG "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CACHE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HAVE_EXP "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CACHE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_REQUIRED_LIBRARIES")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"m"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("check_symbol_exists")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("log "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"math.h"')]),t._v(" HAVE_LOG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("check_symbol_exists")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exp "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"math.h"')]),t._v(" HAVE_EXP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HAVE_LOG "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" HAVE_EXP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_link_libraries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MathFunctions "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PRIVATE")]),t._v(" m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endif")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endif")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# add compile definitions")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HAVE_LOG "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" HAVE_EXP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_compile_definitions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MathFunctions\n                             "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PRIVATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HAVE_LOG"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HAVE_EXP"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endif")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("之后再重新构建并运行项目，查看结果。")]),t._v(" "),a("h1",{attrs:{id:"添加自定义命令和生成的文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加自定义命令和生成的文件"}},[t._v("#")]),t._v(" 添加自定义命令和生成的文件")]),t._v(" "),a("p",[t._v("假设，作为本教程的目的，我们决定永远不要使用平台提供的"),a("code",[t._v("log")]),t._v("和"),a("code",[t._v("exp")]),t._v("函数，而是想生成一个预计算值的表，以便在"),a("code",[t._v("mysqrt")]),t._v("函数中使用。在本节中，我们将创建该表作为构建过程的一部分，然后将该表编译到我们的应用程序中。")]),t._v(" "),a("p",[t._v("首先，让我们删除"),a("code",[t._v("MathFunctions/CMakeLists.txt")]),t._v("中对"),a("code",[t._v("log")]),t._v("和"),a("code",[t._v("exp")]),t._v("函数的检查。然后从"),a("code",[t._v("mysqrt.cxx")]),t._v("中删除对"),a("code",[t._v("HAVE_LOG")]),t._v("和"),a("code",[t._v("HAVE_EXP")]),t._v("的检查。同时，我们可以删除"),a("code",[t._v("#include")]),t._v(" 。")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("MathFunctions")]),t._v("子目录中，提供了一个名为"),a("code",[t._v("MakeTable.cxx")]),t._v("的新源文件来生成表。")]),t._v(" "),a("p",[t._v("查看完文件后，我们可以看到该表是作为有效的 C ++代码生成的，并且输出文件名作为参数传入。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A simple program that builds a sqrt table")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<cmath>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<fstream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// make sure we have enough arguments")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("argc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("ofstream "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("ios_base"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" fileOpen "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is_open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fileOpen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        fout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"double sqrtTable[] = {"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            fout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sqrt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static_cast")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// close the table with a zero")]),t._v("\n        fout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0};"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        fout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" fileOpen "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// return 0 if wrote the file")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("下一步是将适当的命令添加到"),a("code",[t._v("MathFunctions/CMakeLists.txt")]),t._v("文件中，以构建"),a("code",[t._v("MakeTable")]),t._v("可执行文件，然后在构建过程中运行它。需要一些命令来完成此操作。")]),t._v(" "),a("p",[t._v("首先，在"),a("code",[t._v("MathFunctions/CMakeLists.txt")]),t._v("的顶部，添加"),a("code",[t._v("MakeTable")]),t._v("的可执行文件，就像添加任何其他可执行文件一样。")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_executable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MakeTable MakeTable.cxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("然后，我们添加一个自定义命令，该命令指定如何通过运行"),a("code",[t._v("MakeTable")]),t._v("来产生"),a("code",[t._v("Table.h")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_custom_command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  OUTPUT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CURRENT_BINARY_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/Table.h\n  COMMAND MakeTable "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CURRENT_BINARY_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/Table.h\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("DEPENDS")]),t._v(" MakeTable\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("接下来，我们必须让 CMake 知道"),a("code",[t._v("mysqrt.cxx")]),t._v("如何依赖生成的文件"),a("code",[t._v("Table.h")]),t._v("。通过将生成的"),a("code",[t._v("Table.h")]),t._v("添加到库"),a("code",[t._v("MathFunctions")]),t._v("的源列表中，可以完成此操作。")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_library")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MathFunctions\n            mysqrt.cxx\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CURRENT_BINARY_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/Table.h\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("我们还必须将当前的二进制目录添加到包含目录列表中，以便"),a("code",[t._v("mysqrt.cxx")]),t._v("可以找到并包含"),a("code",[t._v("Table.h")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_include_directories")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MathFunctions\n          "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("INTERFACE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CURRENT_SOURCE_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PRIVATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CURRENT_BINARY_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("现在，我们使用生成的表。首先，修改"),a("code",[t._v("mysqrt.cxx")]),t._v("以包含"),a("code",[t._v("Table.h")]),t._v("。接下来，我们可以重写"),a("code",[t._v("mysqrt")]),t._v("函数以使用该表：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MathFunctions.h"')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Table.h"')])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mysqrt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// use the table to help find an initial value")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Use the table to help find an initial value "')]),t._v("\n                  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sqrtTable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static_cast")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do ten iterations")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" delta "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" delta "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Computing sqrt of "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" to be "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" result\n                  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("构建此项目时，它将首先构建"),a("code",[t._v("MakeTable")]),t._v("可执行文件。然后它将运行"),a("code",[t._v("MakeTable")]),t._v("生成"),a("code",[t._v("Table.h")]),t._v("。最后，它将编译包括"),a("code",[t._v("Table.h")]),t._v("的"),a("code",[t._v("mysqrt.cxx")]),t._v("，以生成"),a("code",[t._v("MathFunctions")]),t._v("库。")]),t._v(" "),a("p",[t._v("做完这些更新后，再继续构建项目。运行构建好的 Tutorial 可执行文件，并验证结果是否与前面相同。")]),t._v(" "),a("h1",{attrs:{id:"构建安装程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建安装程序"}},[t._v("#")]),t._v(" 构建安装程序")]),t._v(" "),a("p",[t._v("接下来假设我们想把我们的项目发布给其他人，以便他们能够使用它。我们希望在不同的平台上提供二进制和源代码的发布。这与我们之前在安装和测试（第 4 步）中所做的安装有些不同，在这里我们安装的是我们从源代码中构建的二进制文件。在这个例子中，我们将构建支持二进制安装和包管理功能的安装包。为了完成这个任务，我们将使用"),a("code",[t._v("CPack")]),t._v("来创建特定平台的安装包。具体来说，我们需要在顶层"),a("code",[t._v("CMakeLists.txt")]),t._v("文件的底部添加几行内容:")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("InstallRequiredSystemLibraries"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CPACK_RESOURCE_FILE_LICENSE "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CURRENT_SOURCE_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('/License.txt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CPACK_PACKAGE_VERSION_MAJOR")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("Tutorial_VERSION_MAJOR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CPACK_PACKAGE_VERSION_MINOR")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("Tutorial_VERSION_MINOR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CPack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("首先包含"),a("code",[t._v("InstallRequiredSystemLibraries")]),t._v("。这个模块将包含项目在当前平台上需要的任何运行时库。接下来，我们设置一些"),a("code",[t._v("CPack")]),t._v("变量，将这个项目的许可证和版本信息存储在那里。版本信息在本教程的前面已经设置好了，"),a("code",[t._v("license.txt")]),t._v("已经包含在本步骤的顶层源目录中:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("This is the "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" License.txt "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" introduced "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\nCMake/Tutorial/Step7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),a("p",[t._v("最后我们加入"),a("code",[t._v("CPack")]),t._v("模块，它将使用这些变量和当前系统的一些其他属性来设置安装程序。")]),t._v(" "),a("p",[t._v("下一步是以通常的方式构建项目，然后运行"),a("code",[t._v("cpack")]),t._v("可执行文件。要构建一个二进制发行版，请在二进制目录下运行。")]),t._v(" "),a("p",[t._v("要指定生成器，请使用"),a("code",[t._v("-G")]),t._v("选项。对于多配置的构建，使用"),a("code",[t._v("-C")]),t._v("来指定配置。例如：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("cpack -G ZIP -C Debug\n")])])]),a("p",[t._v("要创建一个源码分发，可以输入：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("cpack --config CPackSourceConfig.cmake\n")])])]),a("p",[t._v("或者，运行"),a("code",[t._v("make package")]),t._v("或右键点击"),a("code",[t._v("Package")]),t._v(" target 并从 IDE 中构建项目。")]),t._v(" "),a("p",[t._v("运行在二进制目录下找到的安装程序。然后运行已安装的可执行文件，并验证它是否工作。")]),t._v(" "),a("h1",{attrs:{id:"添加-dashboard-支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加-dashboard-支持"}},[t._v("#")]),t._v(" 添加 DashBoard 支持")]),t._v(" "),a("p",[t._v("添加支持将我们的测试结果提交到 dashboard 很简单。我们已经为我们的项目定义了一些测试。现在我们只需要运行这些测试并将它们提交到仪表板。为了包含对仪表盘的支持，我们在顶层的"),a("code",[t._v("CMakeLists.txt")]),t._v("中加入了"),a("code",[t._v("CTest")]),t._v("模块:")]),t._v(" "),a("p",[t._v("将"),a("code",[t._v("enable_testing()")]),t._v("替换为"),a("code",[t._v("include(CTest)")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("CTest")]),t._v("模块会自动调用"),a("code",[t._v("enable_testing()")]),t._v("，所以我们可以从"),a("code",[t._v("CMake")]),t._v("文件中删除它。")]),t._v(" "),a("p",[t._v("我们还需要在顶层目录下创建一个"),a("code",[t._v("CTestConfig.cmake")]),t._v("文件，在这里我们可以指定项目的名称和提交"),a("code",[t._v("dashboard")]),t._v("的位置。")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CTEST_PROJECT_NAME "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CMakeTutorial"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CTEST_NIGHTLY_START_TIME")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"00:00:00 EST"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CTEST_DROP_METHOD")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CTEST_DROP_SITE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my.cdash.org"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CTEST_DROP_LOCATION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/submit.php?project=CMakeTutorial"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CTEST_DROP_SITE_CDASH")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("TRUE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("当"),a("code",[t._v("ctest")]),t._v("可执行文件运行时，它将读取这个文件。要创建一个简单的 dashboard，你可以运行"),a("code",[t._v("cmake")]),t._v("可执行文件或"),a("code",[t._v("cmake-gui")]),t._v("来配置项目，但先不要构建它。切换到二叉树状目录，然后运行。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("ctest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-VV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" -D Experimental\n")])])]),a("p",[t._v("请记住，对于多配置生成器（如 Visual Studio），必须指定配置类型。")]),t._v(" "),a("h1",{attrs:{id:"混合静态和共享"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#混合静态和共享"}},[t._v("#")]),t._v(" 混合静态和共享")]),t._v(" "),a("p",[t._v("在这一节中，将展示如何使用"),a("code",[t._v("BUILD_SHARED_LIBS")]),t._v("变量来控制"),a("code",[t._v("add_library()")]),t._v("的默认行为，并允许控制没有明确类型("),a("code",[t._v("STATIC, SHARED, MODULE or OBJECT")]),t._v(")的库的构建方式。")]),t._v(" "),a("p",[t._v("为了达到这个目的，我们需要在顶层的"),a("code",[t._v("CMakeLists.txt")]),t._v("中添加"),a("code",[t._v("BUILD_SHARED_LIBS")]),t._v("。我们使用"),a("code",[t._v("option()")]),t._v("命令，因为它允许用户选择性地选择该值是否应该是 ON 或 OFF。")]),t._v(" "),a("p",[t._v("接下来我们将重构 "),a("code",[t._v("MathFunctions")]),t._v("， 使其成为一个真正的库， 封装使用 "),a("code",[t._v("mysqrt")]),t._v(" 或 "),a("code",[t._v("sqrt")]),t._v("， 而不是要求调用代码来完成这个逻辑。这也意味着 "),a("code",[t._v("USE_MYMATH")]),t._v("将不会控制构建 "),a("code",[t._v("MathFunctions")]),t._v("，而是控制这个库的行为。")]),t._v(" "),a("p",[t._v("第一步是更新顶层"),a("code",[t._v("CMakeLists.txt")]),t._v("的起始部分， 使其看起来像这样:")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("cmake_minimum_required")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("VERSION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# set the project name and version")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("project")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("VERSION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# specify the C++ standard")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CXX_STANDARD")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CXX_STANDARD_REQUIRED")]),t._v(" True"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# control where the static and shared libraries are built so that on windows")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# we don't need to tinker with the path to run the executable")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_ARCHIVE_OUTPUT_DIRECTORY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("PROJECT_BINARY_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_LIBRARY_OUTPUT_DIRECTORY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("PROJECT_BINARY_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_RUNTIME_OUTPUT_DIRECTORY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("PROJECT_BINARY_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("option")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("BUILD_SHARED_LIBS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Build using shared libraries"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("ON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# configure a header file to pass the version number only")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("configure_file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TutorialConfig.h.in TutorialConfig.h"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# add the MathFunctions library")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_subdirectory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MathFunctions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# add the executable")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_executable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial tutorial.cxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_link_libraries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PUBLIC")]),t._v(" MathFunctions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("现在我们已经让"),a("code",[t._v("MathFunctions")]),t._v("始终被使用，接下来需要更新该库的逻辑。因此， 在 "),a("code",[t._v("MathFunctions/CMakeLists.txt")]),t._v("中， 我们需要创建一个 "),a("code",[t._v("SqrtLibrary")]),t._v("， 当 "),a("code",[t._v("USE_MYMATH")]),t._v(" 启用时， 这个"),a("code",[t._v("SqrtLibrary")]),t._v("将有条件地被构建和安装。由于这是一个教程， 我们将明确要求静态地构建 "),a("code",[t._v("SqrtLibrary")]),t._v("。")]),t._v(" "),a("p",[t._v("最终的结果是"),a("code",[t._v("MathFunctions/CMakeLists.txt")]),t._v(" 应该是这样的:")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# add the library that runs")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_library")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MathFunctions MathFunctions.cxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# state that anybody linking to us needs to include the current source dir")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# to find MathFunctions.h, while we don't.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_include_directories")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MathFunctions\n                           "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("INTERFACE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CURRENT_SOURCE_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                           "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# should we use our own math functions")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("option")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("USE_MYMATH "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Use tutorial provided math implementation"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("ON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("USE_MYMATH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_compile_definitions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MathFunctions "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PRIVATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"USE_MYMATH"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# first we add the executable that generates the table")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_executable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MakeTable MakeTable.cxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# add the command to generate the source code")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_custom_command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    OUTPUT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CURRENT_BINARY_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/Table.h\n    COMMAND MakeTable "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CURRENT_BINARY_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/Table.h\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("DEPENDS")]),t._v(" MakeTable\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# library that just does sqrt")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_library")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SqrtLibrary "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("STATIC")]),t._v("\n              mysqrt.cxx\n              "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CURRENT_BINARY_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/Table.h\n              "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# state that we depend on our binary dir to find Table.h")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_include_directories")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SqrtLibrary "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PRIVATE")]),t._v("\n                             "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CURRENT_BINARY_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                             "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_link_libraries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MathFunctions "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PRIVATE")]),t._v(" SqrtLibrary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endif")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# define the symbol stating we are using the declspec(dllexport) when")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# building on windows")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_compile_definitions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MathFunctions "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PRIVATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"EXPORTING_MYMATH"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# install rules")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("installable_libs MathFunctions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TARGET SqrtLibrary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("APPEND installable_libs SqrtLibrary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endif")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("install")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TARGETS "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("installable_libs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" DESTINATION lib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("install")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FILES MathFunctions.h DESTINATION include"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("p",[t._v("接下来，更新 "),a("code",[t._v("MathFunctions/mysqrt.cxx")]),t._v("，使用 "),a("code",[t._v("mathfunctions")]),t._v("和 "),a("code",[t._v("detail")]),t._v(" 命名空间。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MathFunctions.h"')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Table.h"')])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" mathfunctions "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" detail "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mysqrt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Use the table to help find an initial value "')]),t._v("\n                  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sqrtTable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static_cast")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do ten iterations")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" delta "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" delta "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Computing sqrt of "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" to be "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" result\n                  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// namespace detail")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// namespace mathfunctions")]),t._v("\n")])])]),a("p",[t._v("我们还需要在 "),a("code",[t._v("tutorial.cxx")]),t._v("中做一些修改， 使它不再使用 "),a("code",[t._v("USE_MYMATH")]),t._v(":")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("始终 include "),a("code",[t._v("MathFunctions.h")])])]),t._v(" "),a("li",[a("p",[t._v("始终使用 "),a("code",[t._v("mathfunctions::sqrt")])])]),t._v(" "),a("li",[a("p",[t._v("不要 include "),a("code",[t._v("cmath")])])])]),t._v(" "),a("p",[a("code",[t._v("mysqrt.h")]),t._v("如下：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" mathfunctions "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" detail "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mysqrt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// namespace mathfunctions")]),t._v("\n\n")])])]),a("p",[a("code",[t._v("MathFunctions.cxx")]),t._v("如下：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MathFunctions.h"')])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<cmath>")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifdef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("USE_MYMATH")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mysqrt.h"')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" mathfunctions "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sqrt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifdef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("USE_MYMATH")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" detail"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mysqrt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("else")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sqrt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// namespace mathfunctions")]),t._v("\n\n")])])]),a("p",[t._v("最后，更新"),a("code",[t._v("MathFunctions/MathFunctions.h")]),t._v("，使用 dll 导出定义：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_WIN32"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EXPORTING_MYMATH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("DECLSPEC")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__declspec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dllexport"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("else")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("DECLSPEC")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__declspec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dllimport"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// non windows")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("DECLSPEC")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" mathfunctions "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" DECLSPEC "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sqrt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("此时，如果你构建了所有的东西，你可能会注意到链接失败，因为我们将一个没有地址无关代码的静态库与一个有地址无关的库结合在一起。解决这个问题的方法是，无论构建类型如何，都要显式地将"),a("code",[t._v("SqrtLibrary")]),t._v("的"),a("code",[t._v("POSITION_INDEPENDENT_CODE")]),t._v("目标属性设置为 True。")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# state that SqrtLibrary need PIC when the default is shared libraries")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set_target_properties")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SqrtLibrary "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PROPERTIES")]),t._v("\n\t\t\t\t\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("POSITION_INDEPENDENT_CODE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("BUILD_SHARED_LIBS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_link_libraries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MathFunctions "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PRIVATE")]),t._v(" SqrtLibrary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h1",{attrs:{id:"添加生成器表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加生成器表达式"}},[t._v("#")]),t._v(" 添加生成器表达式")]),t._v(" "),a("p",[t._v("在构建系统生成期间会执行"),a("code",[t._v("Generator expression")]),t._v("，以生成特定于每个构建配置的信息。")]),t._v(" "),a("p",[t._v("在许多目标属性（例如"),a("code",[t._v("LINK_LIBRARIES")]),t._v("，"),a("code",[t._v("INCLUDE_DIRECTORIES")]),t._v("，"),a("code",[t._v("COMPLIE_DEFINITIONS")]),t._v("等）的上下文中允许"),a("code",[t._v("Generator expression")]),t._v("。在使用命令填充这些属性（例如"),a("code",[t._v("target_link_libraries()")]),t._v("，"),a("code",[t._v("target_include_directories()")]),t._v("，"),a("code",[t._v("target_compile_definitions()")]),t._v("等）时，也可以使用它们。")]),t._v(" "),a("p",[a("code",[t._v("Generator expression")]),t._v("可用于启用条件链接、编译时使用的条件定义、条件 include 目录等。这些条件可以基于构建配置、目标属性、平台信息或任何其他可查询的信息。")]),t._v(" "),a("p",[t._v("有不同类型的"),a("code",[t._v("Generator expression")]),t._v("，包括逻辑表达式、信息表达式和输出表达式。")]),t._v(" "),a("p",[t._v("逻辑表达式用于创建条件输出。基本的表达式是 0 和 1 表达式。"),a("code",[t._v("$<0:...>")]),t._v("的结果是空字符串，"),a("code",[t._v("<1:...>")]),t._v("的结果是"),a("code",[t._v('"... "')]),t._v("的内容。它们也可以嵌套。")]),t._v(" "),a("p",[a("code",[t._v("Generator expression")]),t._v("的一个常见用法是有条件地添加编译器标志，例如语言级别或警告的标志。一个很好的模式是将这些信息关联到一个"),a("code",[t._v("INTERFACE")]),t._v("目标，允许这些信息传播。让我们从构造一个"),a("code",[t._v("INTERFACE")]),t._v("目标开始，并指定所需的 C++标准为 11，而不是使用"),a("code",[t._v("CMAKE_CXX_STANDARD")]),t._v("。")]),t._v(" "),a("p",[t._v("原代码如下：")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# specify the C++ standard")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CXX_STANDARD")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CXX_STANDARD_REQUIRED")]),t._v(" True"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("替换为：")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_library")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tutorial_compiler_flags "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("INTERFACE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_compile_features")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tutorial_compiler_flags "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("INTERFACE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("cxx_std_11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("接下来，我们为项目添加所需的编译器警告标志。由于警告标志因编译器而异，因此我们使用"),a("code",[t._v("COMPILE_LANG_AND_ID")]),t._v("生成器表达式来控制在给定语言和一组编译器 ID 的情况下应应用的标志，如下所示：")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gcc_like_cxx "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$<COMPILE_LANG_AND_ID:CXX,ARMClang,AppleClang,Clang,GNU>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msvc_cxx "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$<COMPILE_LANG_AND_ID:CXX,MSVC>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_compile_options")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tutorial_compiler_flags "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("INTERFACE")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$<'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("gcc_like_cxx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(':$<BUILD_INTERFACE:-Wall;-Wextra;-Wshadow;-Wformat=2;-Wunused>>"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$<'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("msvc_cxx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(':$<BUILD_INTERFACE:-W3>>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("查看此内容，我们看到警告标志封装在"),a("code",[t._v("BUILD_INTERFACE")]),t._v("条件内。这样做是为了使我们已安装项目的使用者不会继承我们的警告标志。")]),t._v(" "),a("h1",{attrs:{id:"添加导出配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加导出配置"}},[t._v("#")]),t._v(" 添加导出配置")]),t._v(" "),a("p",[t._v("在教程的“安装和测试”中，我们添加了 CMake 安装项目的库和头文件的功能。在”构建安装程序“期间，我们添加了打包这些信息的功能，以便可以将其分发给其他人。")]),t._v(" "),a("p",[t._v("下一步是添加必要的信息，以便其他 CMake 项目可以使用我们的项目，无论是从构建目录，本地安装还是打包时。")]),t._v(" "),a("p",[t._v("第一步是更新我们的"),a("code",[t._v("install（TARGETS）")]),t._v("命令，不仅要指定"),a("code",[t._v("DESTINATION")]),t._v("，还要指定"),a("code",[t._v("EXPORT")]),t._v("。 "),a("code",[t._v("EXPORT")]),t._v("关键字生成并安装一个"),a("code",[t._v("CMake")]),t._v("文件，该文件包含用于从安装树中导入"),a("code",[t._v("install")]),t._v("命令中列出的所有目标的代码。因此，让我们继续，通过更新"),a("code",[t._v("MathFunctions/CMakeLists.txt")]),t._v("中的"),a("code",[t._v("install")]),t._v("命令，显式导出"),a("code",[t._v("MathFunctions")]),t._v("库，如下所示：")]),t._v(" "),a("p",[t._v("现在我们已经导出了"),a("code",[t._v("MathFunctions")]),t._v("，我们还需要显式安装生成的"),a("code",[t._v("MathFunctionsTargets.cmake")]),t._v("文件。通过将以下内容添加到顶层的"),a("code",[t._v("CMakeLists.txt")]),t._v("的底部来完成：")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("install")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EXPORT MathFunctionsTargets\n  FILE MathFunctionsTargets.cmake\n  DESTINATION lib/cmake/MathFunctions\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("然后尝试构建项目，应该会遇到类似下面的错误：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("CMake Error "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" MathFunctions/CMakeLists.txt:\n  Target "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MathFunctions"')]),t._v(" INTERFACE_INCLUDE_DIRECTORIES property contains\n  path:\n\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/Users/wmc/vscode/cmake/tutorial/MathFunctions"')]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" is prefixed "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" directory.\n")])])]),a("p",[t._v("CMake 试图说的是，在生成导出信息的过程中，它将导出与当前机器上的绝对路径，在其他机器上无效。解决方案是更新"),a("code",[t._v("MathFunctions")]),t._v("的 "),a("code",[t._v("target_include_directories()")]),t._v("，以让 CMake 了解当从构建目录内和从安装/包中使用时，它需要不同的 INTERFACE 位置。这意味着将"),a("code",[t._v("MathFunctions")]),t._v("的"),a("code",[t._v("target_include_directories()")]),t._v("调用转换为如下样子:")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_include_directories")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MathFunctions\n                           "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("INTERFACE")]),t._v("\n                            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$<")]),t._v("BUILD_INTERFACE:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CURRENT_SOURCE_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n                            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$<")]),t._v("INSTALL_INTERFACE:include"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n                           "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("修改后重新运行 CMake，应该不会再有警告了。")]),t._v(" "),a("p",[t._v("此时，我们已经让 CMake 正确地打包了所需的目标信息，但我们仍然需要生成一个"),a("code",[t._v("MathFunctionsConfig.cmake")]),t._v("，这样"),a("code",[t._v("CMake find_package()")]),t._v("命令才能找到我们的项目。所以我们继续在项目的顶层添加一个新文件，名为"),a("code",[t._v("Config.cmake.in")]),t._v("，内容如下。")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[t._v("@PACKAGE_INIT@\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CURRENT_LIST_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('/MathFunctionsTargets.cmake"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("然后，为了正确配置和安装该文件，在顶层"),a("code",[t._v("CMakeLists.txt")]),t._v("的底部添加以下内容:")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CMakePackageConfigHelpers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# generate the config file that is includes the exports")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("configure_package_config_file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CURRENT_SOURCE_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/Config.cmake.in\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CURRENT_BINARY_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('/MathFunctionsConfig.cmake"')]),t._v("\n  INSTALL_DESTINATION "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lib/cmake/example"')]),t._v("\n  NO_SET_AND_CHECK_MACRO\n  NO_CHECK_REQUIRED_COMPONENTS_MACRO\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# generate the version file for the config file")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write_basic_package_version_file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CURRENT_BINARY_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('/MathFunctionsConfigVersion.cmake"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("VERSION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("Tutorial_VERSION_MAJOR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("."),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("Tutorial_VERSION_MINOR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),t._v("\n  COMPATIBILITY AnyNewerVersion\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# install the configuration file")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("install")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FILES\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CURRENT_BINARY_DIR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/MathFunctionsConfig.cmake\n  DESTINATION lib/cmake/MathFunctions\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("此时，我们已经为我们的项目生成了一个可重定位的 CMake 配置，可以在项目安装或打包后使用。如果我们希望我们的项目也能在构建目录下使用，我们只需要在顶层 "),a("code",[t._v("CMakeLists.txt")]),t._v("的底部添加以下内容:")]),t._v(" "),a("p",[t._v("通过这个"),a("code",[t._v("export")]),t._v("调用，我们现在可以生成一个"),a("code",[t._v("Targets.cmake")]),t._v("，允许构建目录下配置的"),a("code",[t._v("MathFunctionsConfig.cmake")]),t._v("被其他项目使用，而不需要安装它。")]),t._v(" "),a("h1",{attrs:{id:"打包-debug-和-release"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打包-debug-和-release"}},[t._v("#")]),t._v(" 打包 Debug 和 Release")]),t._v(" "),a("p",[t._v("注意：这个例子对单配置生成器有效，对多配置生成器（如 Visual Studio）无效。")]),t._v(" "),a("p",[t._v("默认情况下，CMake 的模型是一个构建目录只包含一个配置，无论是 Debug、Release、MinSizeRel，还是 RelWithDebInfo。然而，我们可以设置 CPack 来捆绑多个构建目录，并构建一个包含同一项目多个配置的包。")]),t._v(" "),a("p",[t._v("首先，我们要确保 Debug 版本和 Release 版本构建的可执行文件和库使用不同的名称。让我们使用 d 作为 Debug 版可执行文件和库的后缀。")]),t._v(" "),a("p",[t._v("在顶层的"),a("code",[t._v("CMakeLists.txt")]),t._v("文件开始处添加：")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_DEBUG_POSTFIX")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_library")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tutorial_compiler_flags "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("INTERFACE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("以及"),a("code",[t._v("TUtorial")]),t._v("可执行文件上的 DEBUG_POSTFIX 属性:")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_executable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial tutorial.cxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set_target_properties")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PROPERTIES")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("DEBUG_POSTFIX")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_DEBUG_POSTFIX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_link_libraries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tutorial "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PUBLIC")]),t._v(" MathFunctions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("我们也给"),a("code",[t._v("MathFunctions")]),t._v("库添加版本号。在"),a("code",[t._v("MathFunctions/CMakeLists.txt")]),t._v("中，设置"),a("code",[t._v("VERSION")]),t._v("和"),a("code",[t._v("SOVERSION")]),t._v("属性:")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set_property")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TARGET MathFunctions PROPERTY "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("VERSION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set_property")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TARGET MathFunctions PROPERTY "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("SOVERSION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("在项目根目录下：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p step12_build/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("debug,release"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("现在我们需要设置 debug 和 release 版本。我们可以使用"),a("code",[t._v("CMAKE_BUILD_TYPE")]),t._v("来设置配置类型：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" debug\ncmake -DCMAKE_BUILD_TYPE"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Debug "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\ncmake --build "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/release\ncmake -DCMAKE_BUILD_TYPE"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Release "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\ncmake --build "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])]),a("p",[t._v("现在调试和发行版的构建都已经完成，我们可以使用一个自定义的配置文件将两个构建打包成一个发行版。在 step12_build 目录下，创建一个名为"),a("code",[t._v("MultiCPackConfig.cmake")]),t._v("的文件。在这个文件中，首先包含 cmake 可执行文件创建的默认配置文件")]),t._v(" "),a("p",[t._v("接下来，使用"),a("code",[t._v("CPACK_INSTALL_CMAKE_PROJECTS")]),t._v("变量来指定要安装的项目。在本例中，我们希望同时安装 debug 和 release 版本：")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"release/CPackConfig.cmake"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CPACK_INSTALL_CMAKE_PROJECTS\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"debug;Tutorial;ALL;/"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"release;Tutorial;ALL;/"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("在 step12_build 目录下，运行"),a("code",[t._v("cpack")]),t._v("，用"),a("code",[t._v("config")]),t._v("选项指定我们的自定义配置文件:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("cpack --config MultiCPackConfig.cmake\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);